/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Dao.BookedTicketDao;
import Dao.TicketDao;
import Dao.UserDao;
import Model.BookedTicket;
import java.awt.Component;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Ticket;
import model.User;

/**
 *
 * @author Serge B
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        loadTicketsToTable();
         loadUsersTable();
         loadBookedTicketsToTable();
         makeTableRowsSelectable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TicketTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        destinationTxt = new javax.swing.JTextField();
        priceTxt = new javax.swing.JTextField();
        orginTxt = new javax.swing.JTextField();
        seatTxt = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        addbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        home = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        SearchTxt = new javax.swing.JTextField();
        Searchbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        DateTxt = new com.toedter.calendar.JDateChooser();
        classTxt = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        searchTxt = new javax.swing.JTextField();
        serchbtnu = new javax.swing.JButton();
        deletbtnu = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        searchbtbb = new javax.swing.JButton();
        searchbtxt = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        BookedTable = new javax.swing.JTable();
        jScrollBar1 = new javax.swing.JScrollBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 204, 0));
        jLabel1.setText("Ticket Management");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        TicketTable.setBackground(new java.awt.Color(255, 255, 153));
        TicketTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TicketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Orgin", "Destination", "Date", "Price", "Class", "Seat"
            }
        ));
        TicketTable.setGridColor(new java.awt.Color(51, 153, 0));
        TicketTable.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                TicketTableComponentAdded(evt);
            }
        });
        TicketTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TicketTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TicketTable);

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 0));
        jLabel3.setText("Orgin");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 0));
        jLabel4.setText("destination");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 0));
        jLabel5.setText("Date");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 0));
        jLabel6.setText("Price");
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 0));
        jLabel7.setText("Class");
        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 0));
        jLabel8.setText("Seat");
        jLabel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        destinationTxt.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        destinationTxt.setForeground(new java.awt.Color(0, 0, 255));
        destinationTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        priceTxt.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        priceTxt.setForeground(new java.awt.Color(0, 0, 255));
        priceTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        orginTxt.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        orginTxt.setForeground(new java.awt.Color(0, 0, 255));
        orginTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        seatTxt.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        seatTxt.setForeground(new java.awt.Color(0, 0, 255));
        seatTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        seatTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatTxtActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 0));
        jLabel9.setText("Options");
        jLabel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addbtn.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        addbtn.setForeground(new java.awt.Color(0, 153, 0));
        addbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/add.png"))); // NOI18N
        addbtn.setText("ADD");
        addbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        updatebtn.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(0, 153, 0));
        updatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/updated.png"))); // NOI18N
        updatebtn.setText("UPDATE");
        updatebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        home.setBackground(new java.awt.Color(255, 255, 153));
        home.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        home.setForeground(new java.awt.Color(0, 153, 0));
        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/3d-house.png"))); // NOI18N
        home.setText("HOME");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 153));

        SearchTxt.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        SearchTxt.setForeground(new java.awt.Color(0, 0, 255));
        SearchTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Searchbtn.setBackground(new java.awt.Color(255, 255, 153));
        Searchbtn.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        Searchbtn.setForeground(new java.awt.Color(0, 153, 0));
        Searchbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/search.png"))); // NOI18N
        Searchbtn.setText("Search");
        Searchbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbtnActionPerformed(evt);
            }
        });

        deletebtn.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(0, 153, 0));
        deletebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/cancel.png"))); // NOI18N
        deletebtn.setText("DELETE");
        deletebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deletebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(SearchTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(Searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        classTxt.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        classTxt.setForeground(new java.awt.Color(102, 153, 0));
        classTxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Business", "Economic", "First Class", " " }));
        classTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(home)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(destinationTxt)
                                    .addComponent(priceTxt)
                                    .addComponent(orginTxt)
                                    .addComponent(seatTxt)
                                    .addComponent(DateTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(classTxt, javax.swing.GroupLayout.Alignment.TRAILING, 0, 166, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(orginTxt))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(destinationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(DateTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(classTxt))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 510, 670));

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 0));
        jLabel2.setText("UserMangement");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        userTable.setBackground(new java.awt.Color(255, 255, 153));
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "USERNAME", "PHONE NUMBER", "ADDRESS", "PASSWORD"
            }
        ));
        userTable.setGridColor(new java.awt.Color(102, 153, 0));
        userTable.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                userTableComponentAdded(evt);
            }
        });
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(userTable);

        jPanel4.setBackground(new java.awt.Color(255, 255, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setForeground(new java.awt.Color(204, 0, 204));

        searchTxt.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        searchTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        serchbtnu.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        serchbtnu.setForeground(new java.awt.Color(0, 153, 0));
        serchbtnu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/search.png"))); // NOI18N
        serchbtnu.setText("Search");
        serchbtnu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        serchbtnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serchbtnuActionPerformed(evt);
            }
        });

        deletbtnu.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        deletbtnu.setForeground(new java.awt.Color(0, 153, 0));
        deletbtnu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/cancel.png"))); // NOI18N
        deletbtnu.setText("Delete");
        deletbtnu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deletbtnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletbtnuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(serchbtnu, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                    .addComponent(deletbtnu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serchbtnu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deletbtnu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 204));

        jLabel10.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 0));
        jLabel10.setText("BOOKED TICKETS");

        jPanel6.setBackground(new java.awt.Color(255, 255, 153));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setForeground(new java.awt.Color(204, 0, 204));

        searchbtbb.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        searchbtbb.setForeground(new java.awt.Color(0, 153, 0));
        searchbtbb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/search.png"))); // NOI18N
        searchbtbb.setText("Search");
        searchbtbb.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchbtbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtbbActionPerformed(evt);
            }
        });

        searchbtxt.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        searchbtxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(searchbtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchbtbb, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbtbb)
                    .addComponent(searchbtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BookedTable.setBackground(new java.awt.Color(255, 255, 153));
        BookedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "TICKET ID", "PASSENGER", "PHONE NUMBER", "ADDRESS", "ORGIN", "DESTINATION", "Title 8", "Title 9", "Title 10"
            }
        ));
        BookedTable.setGridColor(new java.awt.Color(102, 153, 0));
        BookedTable.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                BookedTableComponentAdded(evt);
            }
        });
        jScrollPane3.setViewportView(BookedTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(41, 41, 41)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, 460, 670));
        getContentPane().add(jScrollBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 0, -1, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seatTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatTxtActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        
         JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor((Component) evt.getSource());
        
         Airplane home = new Airplane();
         home.setVisible(true);
         
         currentFrame.dispose();
    }//GEN-LAST:event_homeActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        // TODO add your handling code here:
        
          if (orginTxt.getText().isEmpty() || destinationTxt.getText().isEmpty() || 
        DateTxt.getDate() == null || priceTxt.getText().isEmpty() || 
        classTxt.getSelectedItem() == null || seatTxt.getText().isEmpty()) {
        
        JOptionPane.showMessageDialog(null, "Please fill in all fields!");
        return;
    }
          
          // Get the values from the form
    String origin = orginTxt.getText();
    String destination = destinationTxt.getText();
    Date date = DateTxt.getDate(); // JDateChooser
    double price = Double.parseDouble(priceTxt.getText());
    String category = (String) classTxt.getSelectedItem(); // JComboBox
    String seat = seatTxt.getText();

    // Now proceed to add the ticket (call the relevant method to insert into the database)
    Ticket ticket = new Ticket();
    ticket.setOrigin(origin);
    ticket.setDestination(destination);
    ticket.setDate(new java.sql.Date(date.getTime())); // Convert to SQL Date
    ticket.setPrice(price);
    ticket.setCategory(category);
    ticket.setSeat(seat);

    // Create TicketDao instance to interact with the database
    TicketDao dao = new TicketDao();
    
    // Call addTicket method to insert the ticket into the database
    boolean result = dao.addTicket(ticket);

    // Provide feedback to the user
    if (result) {
        JOptionPane.showMessageDialog(null, "Ticket added successfully!");
        
        
     
        clear();
        loadTicketsToTable();
    } else {
        JOptionPane.showMessageDialog(null, "Failed to add ticket. Please try again.");
    }
          
          
          
          
    }//GEN-LAST:event_addbtnActionPerformed

    private void classTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classTxtActionPerformed

    private void SearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchbtnActionPerformed
        // TODO add your handling code here:
        
         // Get the TicketId from the search text field
    String searchTicketId = SearchTxt.getText().trim();  // Assuming SearchTxt is the search input field

    if (searchTicketId.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter a Ticket ID to search.");
        return;
    }

    // Create TicketDao instance to interact with the database
    TicketDao dao = new TicketDao();

    // Search for the ticket by TicketId
    Ticket ticket = dao.searchById(searchTicketId);

    // Clear the table before showing the search result
    DefaultTableModel model = (DefaultTableModel) TicketTable.getModel();
    model.setRowCount(0); // Clear existing rows

    if (ticket != null) {
        // Add the found ticket details to the table
        model.addRow(new Object[] {
            ticket.getTicketId(),
            ticket.getOrigin(),
            ticket.getDestination(),
            ticket.getDate(),
            ticket.getPrice(),
            ticket.getCategory(),
            ticket.getSeat()
        });
    } else {
        // Show a message if the ticket is not found
        JOptionPane.showMessageDialog(null, "Ticket with ID " + searchTicketId + " not found.");
    }
        
    }//GEN-LAST:event_SearchbtnActionPerformed

    private void TicketTableComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_TicketTableComponentAdded
        // TODO add your handling code here:
        
         loadTicketsToTable();
    }//GEN-LAST:event_TicketTableComponentAdded

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        
         // Check if a ticket is selected
    int selectedRow = TicketTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select a ticket to update.");
        return;
    }

    // Get the ticket ID from the selected row (assuming it's in the first column of the table)
    String ticketId = TicketTable.getValueAt(selectedRow, 0).toString();
    
    // Fetch the ticket details from the database
    TicketDao dao = new TicketDao();
    Ticket ticketToUpdate = dao.searchById(ticketId);
    
    if (ticketToUpdate == null) {
        JOptionPane.showMessageDialog(null, "Ticket not found.");
        return;
    }

   
   
   
    String origin = orginTxt.getText();
    String destination = destinationTxt.getText();
    Date date = DateTxt.getDate(); // JDateChooser
    double price = Double.parseDouble(priceTxt.getText());
    String category = (String) classTxt.getSelectedItem();
    String seat = seatTxt.getText();

    // Create the updated ticket
    Ticket updatedTicket = new Ticket();
    updatedTicket.setTicketId(ticketId); // Set the ID to update the correct ticket
    updatedTicket.setOrigin(origin);
    updatedTicket.setDestination(destination);
    updatedTicket.setDate(new java.sql.Date(date.getTime())); // Convert to SQL Date
    updatedTicket.setPrice(price);
    updatedTicket.setCategory(category);
    updatedTicket.setSeat(seat);

    // Update the ticket in the database
    boolean result = dao.updateTicket(updatedTicket);

    // Provide feedback to the user
    if (result) {
        JOptionPane.showMessageDialog(null, "Ticket updated successfully!");
        
        // Optionally, reload the table to show the updated data
        clear();
        loadTicketsToTable();
    } else {
        JOptionPane.showMessageDialog(null, "Failed to update ticket. Please try again.");
    }
        
        
    }//GEN-LAST:event_updatebtnActionPerformed

    private void TicketTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TicketTableMouseClicked
        // TODO add your handling code here:
        
        int selectedRow = TicketTable.getSelectedRow();
    
    // Check if a row is selected
    if (selectedRow != -1) {
        // Get the ticket ID from the selected row (assuming it's in the first column of the table)
        String ticketId = TicketTable.getValueAt(selectedRow, 0).toString();
        
        // Fetch the ticket details from the database
        TicketDao dao = new TicketDao();
        Ticket ticketToUpdate = dao.searchById(ticketId); // Search by ticket ID
        
        if (ticketToUpdate != null) {
            // Populate the fields with the selected ticket data
            orginTxt.setText(ticketToUpdate.getOrigin());
            destinationTxt.setText(ticketToUpdate.getDestination());
            DateTxt.setDate(ticketToUpdate.getDate());  // JDateChooser
            priceTxt.setText(String.valueOf(ticketToUpdate.getPrice()));
            classTxt.setSelectedItem(ticketToUpdate.getCategory());
            seatTxt.setText(ticketToUpdate.getSeat());
        }
    }
    }//GEN-LAST:event_TicketTableMouseClicked

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
          // Check if a ticket is selected
    int selectedRow = TicketTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select a ticket to delete.");
        return;
    }

    // Get the ticket ID from the selected row (assuming it's in the first column of the table)
    String ticketId = TicketTable.getValueAt(selectedRow, 0).toString();

    // Ask the user for confirmation to delete the ticket
    int confirmation = JOptionPane.showConfirmDialog(
        null, 
        "Are you sure you want to delete this ticket?", 
        "Delete Ticket", 
        JOptionPane.YES_NO_OPTION, 
        JOptionPane.WARNING_MESSAGE
    );
    
    // If the user clicks "Yes" (JOptionPane.YES_OPTION)
    if (confirmation == JOptionPane.YES_OPTION) {
        // Create TicketDao instance to interact with the database
        TicketDao dao = new TicketDao();

        // Delete the ticket from the database
        boolean result = dao.deleteTicketById(ticketId);

        // Provide feedback to the user
        if (result) {
            JOptionPane.showMessageDialog(null, "Ticket deleted successfully!");

            // Reload the table to show the updated list of tickets
            loadTicketsToTable();
            clear();
        } else {
            JOptionPane.showMessageDialog(null, "Failed to delete ticket. Please try again.");
        }
    } else {
        // If the user clicked "No" or closed the confirmation dialog, do nothing
        System.out.println("Ticket deletion cancelled.");
    }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void userTableComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_userTableComponentAdded
        // TODO add your handling code here:
        loadUsersTable();
        
    }//GEN-LAST:event_userTableComponentAdded

    private void serchbtnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serchbtnuActionPerformed
        // TODO add your handling code here:
        
        // Get the username entered in the search field
    String username = searchTxt.getText().trim(); // Assuming your input field is named searchUserTxt

    if (username.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter a username to search.");
        return;
    }

    UserDao userDao = new UserDao();
    User user = userDao.getUserByUsername(username); // A method you will create in UserDao

    DefaultTableModel model = (DefaultTableModel) userTable.getModel(); // Assuming your table is userTable
    model.setRowCount(0); // Clear current table content

    if (user != null) {
        // Add found user to the table
        model.addRow(new Object[]{
            user.getUserName(),
            user.getPhoneNumber(),
            user.getAddress(),
            user.getPassword()
        });
    } else {
        JOptionPane.showMessageDialog(null, "No user found with username: " + username);
    }
        
        
    }//GEN-LAST:event_serchbtnuActionPerformed

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_userTableMouseClicked

    private void deletbtnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletbtnuActionPerformed
        // TODO add your handling code here:
        int selectedRow = userTable.getSelectedRow(); // Make sure your table is named 'userTable'

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select a user to delete.");
        return;
    }

    // Assuming username is in the first column
    String username = userTable.getValueAt(selectedRow, 0).toString();

    // Ask for user confirmation before deletion
    int confirm = JOptionPane.showConfirmDialog(null,
            "Are you sure you want to delete user: " + username + "?",
            "Confirm Delete", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

    // If the user confirms the deletion
    if (confirm == JOptionPane.YES_OPTION) {
        UserDao userDao = new UserDao();
        boolean success = userDao.deleteUser(username); // Assuming a deleteUser method in UserDao

        if (success) {
            JOptionPane.showMessageDialog(null, "User deleted successfully.");
            loadUsersTable(); // Refresh the table to reflect the updated user list
        } else {
            JOptionPane.showMessageDialog(null, "Failed to delete user. Please try again.");
        }
    } else {
        // If the user cancels, do nothing
        System.out.println("User deletion cancelled.");
    }
        
    }//GEN-LAST:event_deletbtnuActionPerformed

    private void searchbtbbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtbbActionPerformed
        // TODO add your handling code here:
        String usernameToSearch = searchbtxt.getText().trim(); // Replace with your actual search field variable

    if (usernameToSearch.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a username to search.");
        return;
    }

    // Fetch the booked tickets filtered by username
    BookedTicketDao bookedTicketDao = new BookedTicketDao();
    List<BookedTicket> bookedTickets = bookedTicketDao.getBookedTicketsByUsername(usernameToSearch);

    if (bookedTickets.isEmpty()) {
        // If no tickets are found for the entered username
        JOptionPane.showMessageDialog(this, "No tickets found for the username: " + usernameToSearch);
        
        // Reload all tickets after the user clicks "OK"
       loadBookedTicketsToTable();
    } else {
        // If tickets are found, update the table with the search results
        updateBookedTicketsTable(bookedTickets);
    }
    }//GEN-LAST:event_searchbtbbActionPerformed

    private void BookedTableComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_BookedTableComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_BookedTableComponentAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              //  new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BookedTable;
    private com.toedter.calendar.JDateChooser DateTxt;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JButton Searchbtn;
    private javax.swing.JTable TicketTable;
    private javax.swing.JButton addbtn;
    private javax.swing.JComboBox<String> classTxt;
    private javax.swing.JButton deletbtnu;
    private javax.swing.JButton deletebtn;
    private javax.swing.JTextField destinationTxt;
    private javax.swing.JButton home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField orginTxt;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JButton searchbtbb;
    private javax.swing.JTextField searchbtxt;
    private javax.swing.JTextField seatTxt;
    private javax.swing.JButton serchbtnu;
    private javax.swing.JButton updatebtn;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables

private void loadTicketsToTable() {
    TicketDao dao = new TicketDao();
    List<Ticket> tickets = dao.readAllTickets();

    // Assuming you have a JTable named "ticketTable"
    DefaultTableModel model;
        model = (DefaultTableModel) TicketTable.getModel();
    model.setRowCount(0); // Clear the existing rows before adding new ones

    // Add each ticket as a new row in the table
    tickets.forEach(ticket -> {
        model.addRow(new Object[]{
            ticket.getTicketId(),
            ticket.getOrigin(),
            ticket.getDestination(),
            ticket.getDate(),
            ticket.getPrice(),
            ticket.getCategory(),
            ticket.getSeat()
        });
    });
    
  
    
    
    
}
private void loadUsersTable() {
    UserDao userDao = new UserDao();
    List<User> users = userDao.getAllUsers(); // Correctly calling from DAO

    // Assuming you have a JTable named "TicketTable" and it is being reused for users
    DefaultTableModel model = (DefaultTableModel) userTable.getModel();
    model.setRowCount(0); // Clear existing data

    // Add each user as a new row in the table
    for (User user : users) {
        model.addRow(new Object[]{
            user.getUserName(),
            user.getPhoneNumber(),
            user.getAddress(),
            user.getPassword(),
            
        });
    }
}

private void loadBookedTicketsToTable() {
    BookedTicketDao bookedTicketDao = new BookedTicketDao();
    List<BookedTicket> bookedTickets = bookedTicketDao.getAllBookedTickets();

    // Create a table model with column names and row data
    String[] columnNames = { "Ticket ID", "Username", "Phone Number", "Address", "Origin", "Destination" };
    Object[][] rowData = new Object[bookedTickets.size()][6];

    // Populate the row data with the fetched booked tickets
    for (int i = 0; i < bookedTickets.size(); i++) {
        BookedTicket bookedTicket = bookedTickets.get(i);
        rowData[i][0] = bookedTicket.getTicketId();
        rowData[i][1] = bookedTicket.getUsername();
        rowData[i][2] = bookedTicket.getPhoneNumber();
        rowData[i][3] = bookedTicket.getAddress();
        rowData[i][4] = bookedTicket.getOrigin();
        rowData[i][5] = bookedTicket.getDestination();
    }

    // Create the table model
    DefaultTableModel model = new DefaultTableModel(rowData, columnNames);
    BookedTable.setModel(model); // Assuming 'bookedTable' is the JTable instance
}


    

public void clear(){
    
        orginTxt.setText("");
        destinationTxt.setText("");
        DateTxt.setDate(null);
        priceTxt.setText("");
        classTxt.setSelectedIndex(0); // Reset combo box
        seatTxt.setText("");
    
   };

private void makeTableRowsSelectable() {
    BookedTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            int selectedRow = BookedTable.getSelectedRow();
            if (selectedRow != -1) {
                String selectedTicketId = (String) BookedTable.getValueAt(selectedRow, 0);
                String selectedUsername = (String) BookedTable.getValueAt(selectedRow, 1);
                // You can use this data (e.g., for booking confirmation, etc.)
                System.out.println("Selected Ticket ID: " + selectedTicketId + ", Username: " + selectedUsername);
            }
        }

       
    });
}

    private void updateBookedTicketsTable(List<BookedTicket> bookedTickets) {
           // Create a table model with column names and row data
    String[] columnNames = { "Ticket ID", "Username", "Phone Number", "Address", "Origin", "Destination" };
    Object[][] rowData = new Object[bookedTickets.size()][6];

    // Populate the row data with the fetched booked tickets
    for (int i = 0; i < bookedTickets.size(); i++) {
        BookedTicket bookedTicket = bookedTickets.get(i);
        rowData[i][0] = bookedTicket.getTicketId();
        rowData[i][1] = bookedTicket.getUsername();
        rowData[i][2] = bookedTicket.getPhoneNumber();
        rowData[i][3] = bookedTicket.getAddress();
        rowData[i][4] = bookedTicket.getOrigin();
        rowData[i][5] = bookedTicket.getDestination();
    }

    // Create the table model and set it on the table
    DefaultTableModel model = new DefaultTableModel(rowData, columnNames);
    BookedTable.setModel(model); // Assuming 'bookedTable' is the JTable instance
    }



}
